<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"    
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.learning.dao.PaperDao">
	<insert id="insertPaper" parameterType="com.learning.pojo.Paper"
		useGeneratedKeys="true" keyProperty="pid">
		INSERT INTO paper (
		pname,
		pdate,
		totalScore

		) VALUES(
		#{pname},
		#{pdate},
		#{totalScore}
		);

	</insert>
	<select id="getPapersUserNotDoItYet" resultType="com.learning.pojo.Paper">
		SELECT P.* FROM
		paper p
		WHERE p.pid not in (select up.pid from user u,user_paper up
		WHERE u.uid = up.uid and u.uid =#{0} ) order by p.pid desc;
	</select>

	<select id="getPapersNumUserNotDoItYet" resultType="java.lang.Integer">
		SELECT
		count(1) FROM paper p
		WHERE p.pid not in (select up.pid from user
		u,user_paper up WHERE u.uid = up.uid and u.uid =#{0} ) ;
	</select>

	<select id="testPaperDone" resultType="java.lang.Integer">
		SELECT count(1) FROM
		user_paper up
		WHERE up.pid = #{1} AND up.uid LIKE CONCAT('',#{0}) ;
	</select>
	<select id="getSpecPaper" resultType="com.learning.pojo.Paper">
		SELECT * FROM
		paper p
		WHERE
		p.pid = #{0} ;
	</select>
	<insert id="insertUser_paper" parameterType="com.learning.pojo.User_paper">
		INSERT INTO
		user_paper (

		uid,
		pid,
		totalScore,
		startTime,
		endTime

		)VALUES(
		#{uid},
		#{pid},
		#{totalScore},
		#{startTime},
		#{endTime}
		);
	</insert>
	<select id="getUser_papers" resultType="com.learning.pojo.User_paper">
		SELECT * FROM user_paper
		WHERE pid = #{0} and uid = #{1};

	</select>
	<select id="getQueryPapersWithParms" resultType="com.learning.pojo.Paper">


		<choose>
			<when test="teacherId != null">
				SELECT
				p.pid pid,
				MAX(p.pname) pname,
				MAX(p.pdate) pdate,
				MAX(p.totalScore) totalScore,
				'最高'+MAX(up.totalScore) score,
				COUNT(up.uid)+'人' userName
				FROM paper p,user_paper up ,user u WHERE
				p.pid = up.pid AND
				up.uid = u.uid
			</when>
			<otherwise>
				SELECT
				p.pid pid,
				p.pname pname,
				p.pdate pdate,
				p.totalScore totalScore,
				up.totalScore score,
				u.uname userName
				FROM paper p,user_paper up ,user u WHERE
				p.pid = up.pid AND
				up.uid = u.uid
			</otherwise>
		</choose>
		<if test="title == null and date == null"> AND ABS(TO_DAYS( NOW( ) ) - TO_DAYS(up.endTime) ) &lt;=2
		</if>
		<if test="title != null and date == null"> AND p.pname LIKE CONCAT('%',CONCAT(#{title},'%'))</if>

		<if test="title == null and date != null"> AND ABS(TO_DAYS( #{date} ) - TO_DAYS(up.endTime)) &lt;=2
		</if>

		<if test="title != null and date != null">AND p.pname LIKE CONCAT('%',CONCAT(#{title},'%')) AND
			ABS(TO_DAYS( #{date} ) - TO_DAYS(up.endTime)) &lt;=2 </if>
		<if test="studentId != null "> AND up.uid = #{studentId}</if>
		<if test="teacherId != null ">group by p.pid</if>
		order by p.pid desc;

	</select>
	<select id="getUser_papersByPid" resultType="com.learning.pojo.User_paper">
		SELECT * FROM
		user_paper
		WHERE pid = #{0} order by totalScore ;
	</select>
	<delete id="deleteOnePaperStudentNotDone">
		delete FROM paper
		WHERE pid = #{0} AND
		pid not in (SELECT pid FROM (SELECT p.pid FROM paper p, user_paper up
		WHERE p.pid = up.pid) result ) ;
	</delete>
	<select id="getPapersNoStudentDone" resultType="com.learning.pojo.Paper">
		SELECT p.* FROM paper p WHERE p.pid not in (select pid from user_paper up);
	</select>
    <select id="getUsersMsgByPid" resultType="com.learning.pojo.User">
		SELECT u.* FROM
		user_paper up,user u
		WHERE up.pid = #{0} and up.uid = u.uid order by totalScore ;
	</select>


</mapper>
	
	